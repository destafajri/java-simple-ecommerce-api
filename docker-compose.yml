version: "3.9"

services:
  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.17.10'
    container_name: elasticsearch-java
    expose:
      - 9200
    ports:
      - "9200:9200"  # Expose Elasticsearch HTTP API port
      - "9300:9300"  # Expose Elasticsearch transport port
    environment:
      - "node.name=elasticsearch"
      - "discovery.type=single-node"
      - "cluster.name=java-cluster"
      - 'xpack.security.enabled=false'

    volumes:
      - elasticsearch-data:/var/lib/elastic

  postgres:
    image: 'postgres:15.0'
    container_name: postgres-java
    environment:
      POSTGRES_DB: your_db_name
      POSTGRES_USER: your_db_username
      POSTGRES_PASSWORD: your_db_password
    expose:
      - 5432
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgres

  redis:
    image: 'redis:latest'
    container_name: redis-java
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/certs
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  mailhog:
    image: mailhog/mailhog:latest
    container_name: mailhog-java
    ports:
      - "1025:1025"
      - "8025:8025"
    volumes:
      - mailhog-data:/data

#  springboot-app:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    container_name: springboot-application
#    expose:
#      - 8080
#    ports:
#      - "8080:8080"
#    depends_on:
#      - elasticsearch
#      - postgres
#      - redis
#    restart: on-failure
#    command:
#      - rm **/application.yml
#    environment:
#      SPRING_APPLICATION_JSON: '{
#          "spring.datasource.url": "jdbc:postgresql://postgres:5432/your_db_name?user=your_db_username&password=your_db_password",
#          "spring.datasource.username": "your_db_username",
#          "spring.datasource.password": "your_db_password",
#          "spring.flyway.url": "jdbc:postgresql://postgres:5432/your_db_name",
#          "spring.flyway.user": "your_db_username",
#          "spring.flyway.password": "your_db_password",
#          "spring.flyway.locations": "classpath:db/migration",
#          "spring.datasource.driverClassName": "org.postgresql.Driver",
#          "spring.jpa.hibernate.ddl-auto": "none",
#          "spring.elasticsearch.uris": "http://elasticsearch:9200"
#        }'
#    volumes:
#      - springboot-data:/var/lib/spring-boot

volumes:
  elasticsearch-data:
  redis-data:
  postgres-data:
  mailhog-data:
#  springboot-data: